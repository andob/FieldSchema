package com.yatatsu.fieldschema.processor;

import com.squareup.javapoet.FieldSpec;
import com.squareup.javapoet.JavaFile;
import com.squareup.javapoet.TypeSpec;
import java.io.IOException;
import java.util.List;
import javax.annotation.processing.Filer;
import javax.lang.model.element.Modifier;

public class FieldSchemaCodeWriter {

  private static final String TARGET_PACKAGE_NAME = "com.yatatsu.fieldschema";
  private static final String TARGET_CLASS_NAME = "FS";
  private final List<FieldSchemaHolder> fieldSchemaHolders;

  FieldSchemaCodeWriter(List<FieldSchemaHolder> fieldSchemaHolders) {
    this.fieldSchemaHolders = fieldSchemaHolders;
  }

  public void write(Filer filer) throws IOException {
    TypeSpec.Builder typeSpecBuilder =
        TypeSpec.classBuilder(TARGET_CLASS_NAME).addModifiers(Modifier.PUBLIC, Modifier.FINAL);
    typeSpecBuilder.addJavadoc(
        "FieldSchema\n\n" + "This is auto generated by FieldSchema. Do not modify.\n");
    fieldSchemaHolders.stream().map(FieldSchemaCodeWriter::createFieldSpec)
        .forEach(typeSpecBuilder::addField);
    JavaFile.builder(TARGET_PACKAGE_NAME, typeSpecBuilder.build()).build().writeTo(filer);
  }

  private static FieldSpec createFieldSpec(FieldSchemaHolder holder) {
    return FieldSpec.builder(String.class, holder.getName(), Modifier.PUBLIC, Modifier.STATIC,
        Modifier.FINAL).initializer("$S", holder.getValue()).build();
  }
}
